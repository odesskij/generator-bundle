{# @formatter:off #}
<?php
namespace {{ namespace }};

{% block use_statements %}
use Doctrine\Common\DataFixtures\AbstractFixture;
use Doctrine\Common\DataFixtures\FixtureInterface;
use Doctrine\Common\DataFixtures\OrderedFixtureInterface;
use Doctrine\Common\Persistence\ObjectManager;
use Symfony\Component\DependencyInjection\ContainerAwareInterface;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\Yaml\Yaml;
{% endblock use_statements %}

/**
 * {{ fixtures }}.
{% if php_doc.author is defined %}
 *
 * @author {{ php_doc.author }}
 {% endif %}
 */
{% block class_definition %}
class {{ fixtures }} extends AbstractFixture implements
    FixtureInterface,
    OrderedFixtureInterface,
    ContainerAwareInterface
{% endblock class_definition %}
{
{% block class_body %}
    /** @var ContainerInterface */
    protected $container;

    /**
     * {@inheritdoc}
     */
    public function setContainer(ContainerInterface $container = null)
    {
        $this->container = $container;
    }

    /**
     * {@inheritdoc}
     */
    public function load(ObjectManager $manager)
    {
        foreach ($this->getData() as $class => $drow) {
            //$row = new ...
            //$manager->persist($row);
        }

        $manager->flush();
    }

    /**
     * {@inheritdoc}
     */
    public function getOrder()
    {
        return 1;
    }

    /**
     * @return array
     */
    protected function getData()
    {
        $path = $this->container->getParameter('{{ bundle_alias }}.fixtures_data');
        $path .= '/{{ fixtures_alias }}.yml';
        $data = Yaml::parse(file_get_contents($path));

        return $data;
    }
{% endblock class_body %}
}
{# @formatter:on #}